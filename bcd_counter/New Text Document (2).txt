// Code your design here
module up_down_counter(clk, up_down, reset, count);
input clk, up_down, reset;
output reg [3:0] count;

always @(posedge clk) begin
    if (reset) begin
        count <= 4'b0000;
    end else if (up_down) begin
        count <= count + 1;
    end else begin
        count <= count - 1;
    end
end

endmodule




// Code your testbench here
// or browse Examples
module tb_up_down_counter;

reg clk, reset, up_down;
wire [3:0] count;

  up_down_counter uut(.clk(clk), .up_down(up_down), .reset(reset), .count(count));

initial begin
    clk = 0;
    reset = 1;
    up_down = 1;
    #10 reset = 0;
    #10 up_down = 0;
    #100 $finish;
end

always #5 clk = ~clk;
  
  initial begin
    $dumpfile("dump.vcd");
    $dumpvars();
  end

endmodule